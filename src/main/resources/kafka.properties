###########\u751F\u4EA7\u8005\u76F8\u5173\u53C2\u6570
metadata.broker.list=node92:9092,node93:9092,node94:9092,node95:9092
#metadata.broker.list=no0:9092,no1:9092,no2:9092,no3:9092,no4:9092,no5:9092

serializer.class_obj=com.iecas.kds.tools.kafka.kafkaUtils.ObjectEncoder
key.serializer.class_obj=com.iecas.kds.tools.kafka.kafkaUtils.ObjectEncoder

serializer.class=kafka.serializer.StringEncoder
key.serializer.class=kafka.serializer.StringEncoder

request.required.acks=1

###########\u6D88\u8D39\u8005\u76F8\u5173\u53C2\u6570
zookeeper.connect=node92:2181,node93:2181,node94:2181/kafka
#zookeeper.connect=no1:2181,no2:2181,no3:2181,no4:2181,no5:2181/kafka

group.id=group-kds3

zookeeper.session.timeout.ms=5000

zookeeper.connection.timeout.ms=10000

zookeeper.sync.time.ms=2000

auto.commit.interval.ms=1003

auto.offset.reset=largest
#auto.offset.reset=largest
#smallest表示从最开始消费，largest从最新的开始消费

partitioner.class = com.iecas.kds.tools.kafka.partition.MyPartitioner
partitioner.class_obj = com.iecas.kds.tools.kafka.partition.MyPartitioner_Object


con.topic.name = topic_jt1
pro.topic.name = topic_jt1

con.thread.num = 4

pro.data.size = 10000
pro.count = 400
pro.batch.size = 1000




