###--------------***Producer配置***-----------------###
metadata.broker.list=kafka3:9092,kafka4:9092,kafka5:9092
#metadata.broker.list=no0:9092,no1:9092,no2:9092,no3:9092,no4:9092,no5:9092
serializer.class_obj=com.iecas.kds.tools.kafka.kafkaUtils.ObjectEncoder
key.serializer.class_obj=com.iecas.kds.tools.kafka.kafkaUtils.ObjectEncoder
serializer.class=kafka.serializer.StringEncoder
key.serializer.class=kafka.serializer.StringEncoder
#需要服务端确认是否发送成功，默认为0表示不需要，1表示leader确认即为成功，-1表示所有副本确认才成功
request.required.acks=1
#可以用来缓存数据的内存大小，long值，默认为3554432
buffer.memory=3554432
#默认sync表示同步发送，async表示异步发送
producer.type=sync
#在异步模式下，缓冲数据的最大时间，默认值为5000
queue.buffering.max.ms=1000
#在异步模式下，一个batch发送的消息数量，默认值200，和
batch.num.messages=10000
#在异步模式下，producer端允许buffer的最大消息数量，默认值：10000
queue.buffering.max.messages=10001
###---------------***Consumer配置***-----------------###
zookeeper.connect=kafka1:2181,kafka2:2181,kafka3:2181,kafka4:2181,kafka5:2181/kafka
#zookeeper.connect=no1:2181,no2:2181,no3:2181,no4:2181,no5:2181/kafka
zookeeper.session.timeout.ms=5000
zookeeper.connection.timeout.ms=10000
zookeeper.sync.time.ms=2000
auto.commit.interval.ms=1003
#smallest表示从最开始消费，largest从最新的开始消费
auto.offset.reset=smallest
partitioner.class=com.iecas.kds.tools.kafka.partition.MyPartitioner
partitioner.class_obj=com.iecas.kds.tools.kafka.partition.MyPartitioner_Object

###---------------***MYProducer配置***-----------------###
#批量发送的batch大小,为大于0的int值，1表示单条发送
pro.batch.size=10000

